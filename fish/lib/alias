#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import re
import os
import sys
from pathlib import Path

from typing import List


def fail(msg: str):
    print(msg)
    sys.exit(2)


def translate(
    *argv: List[str],
    caller: str = None,
    alias: str = None,
    cmd: str = None,
):
    ktz_dir_dotfiles = os.getenv("ktz_dir_dotfiles")
    if not ktz_dir_dotfiles:
        fail("ktz_dir_dotfiles is not set")

    root = Path(ktz_dir_dotfiles)
    dsl = root / "assets" / "alias" / f"{alias}.alias"
    if not dsl.exists():
        fail(f"no alias file for {alias}")

    with dsl.open(mode="r") as fd:

        # read lines without leading/traling whitespace
        g0 = (raw.strip() for raw in fd)
        # remove empty lines and comments
        g1 = (line for line in g0 if line and not line.startswith("#"))
        # get rules and substitutes
        dic = dict(tuple(s.strip() for s in sub.split(":")) for sub in g1)

        if cmd not in dic:
            fail(f"unknown command '{cmd}'")

        sub = dic[cmd]
        if argv and "*" not in sub:
            fail("command '{cmd}' does not accept arguments")

        # strings need to be escaped
        # (escaping with single quotes - shell variables will not work)
        argv = [f"'{a}'" if re.search(r"\s", a) else f"{a}" for a in argv]

        return sub.replace("*", " ".join(argv))

    fail(f"unknown command {cmd}")


if __name__ == "__main__":
    caller, alias, *argv = sys.argv
    cmd, *argv = argv if len(argv) else ("",)

    sub = translate(*argv, caller=caller, alias=alias, cmd=cmd)
    print(sub)
